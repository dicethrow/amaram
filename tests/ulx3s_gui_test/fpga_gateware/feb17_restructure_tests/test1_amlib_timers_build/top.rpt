
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.13+3 (git sha1 61324cf55, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `top.ys' --

1. Executing RTLIL frontend.
Input filename: top.il

2. Executing SYNTH_ECP5 pass.

2.1. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_SLICE'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

2.2. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\DLLDELD'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCSC'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

2.3. Executing HIERARCHY pass (managing design hierarchy).

2.3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \pin_clk25_0
Used module:     \pin_button_right_0
Used module:     \pin_button_left_0
Used module:     \pin_button_down_0
Used module:     \pin_button_up_0
Used module:     \pin_button_fire_1
Used module:     \pin_button_fire_0
Used module:     \pin_button_pwr_0
Used module:     \pin_uart_0__dtr
Used module:     \pin_uart_0__rts
Used module:     \pin_uart_0__tx
Used module:     \pin_uart_0__rx
Used module:     \pin_esp32_spi_0__gpio16_sclk
Used module:     \pin_esp32_spi_0__gpio12_cipo
Used module:     \pin_esp32_spi_0__gpio5_cs
Used module:     \pin_esp32_spi_0__gpio4_copi
Used module:     \pin_esp32_spi_0__gpio0
Used module:     \pin_esp32_spi_0__rx
Used module:     \pin_esp32_spi_0__tx
Used module:     \pin_esp32_spi_0__en
Used module:     \pin_led_7
Used module:     \pin_led_6
Used module:     \pin_led_5
Used module:     \pin_led_4
Used module:     \pin_led_3
Used module:     \pin_led_2
Used module:     \pin_led_1
Used module:     \pin_led_0
Used module:     \tb
Used module:         \dut
Used module:             \delayer
Used module:     \i_button_ffsync

2.3.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \pin_clk25_0
Used module:     \pin_button_right_0
Used module:     \pin_button_left_0
Used module:     \pin_button_down_0
Used module:     \pin_button_up_0
Used module:     \pin_button_fire_1
Used module:     \pin_button_fire_0
Used module:     \pin_button_pwr_0
Used module:     \pin_uart_0__dtr
Used module:     \pin_uart_0__rts
Used module:     \pin_uart_0__tx
Used module:     \pin_uart_0__rx
Used module:     \pin_esp32_spi_0__gpio16_sclk
Used module:     \pin_esp32_spi_0__gpio12_cipo
Used module:     \pin_esp32_spi_0__gpio5_cs
Used module:     \pin_esp32_spi_0__gpio4_copi
Used module:     \pin_esp32_spi_0__gpio0
Used module:     \pin_esp32_spi_0__rx
Used module:     \pin_esp32_spi_0__tx
Used module:     \pin_esp32_spi_0__en
Used module:     \pin_led_7
Used module:     \pin_led_6
Used module:     \pin_led_5
Used module:     \pin_led_4
Used module:     \pin_led_3
Used module:     \pin_led_2
Used module:     \pin_led_1
Used module:     \pin_led_0
Used module:     \tb
Used module:         \dut
Used module:             \delayer
Used module:     \i_button_ffsync
Removed 0 unused modules.

2.4. Executing PROC pass (convert processes to netlists).

2.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$119'.
Found and cleaned up 1 empty switch in `\delayer.$group_1'.
Cleaned up 2 empty switches.

2.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$219 in module TRELLIS_FF.
Marked 1 switch rules as full_case in process $proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$178 in module DPR16X4C.
Marked 1 switch rules as full_case in process $proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$120 in module TRELLIS_DPR16X4.
Marked 1 switch rules as full_case in process $group_2 in module delayer.
Removed a total of 0 dead cases.

2.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 56 redundant assignments.
Promoted 52 assignments to connections.

2.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$223'.
  Set init value: \Q = 1'0
Found init rule in `\top.$group_27'.
  Set init value: $sample$s$reset$sync_1e6$1 = 1'0
Found init rule in `\top.$group_26'.
  Set init value: $sample$s$trigger$sync_1e6$1 = 1'0
Found init rule in `\top.$group_18'.
  Set init value: \pin_led_0_led_0__o = 1'0
  Set init value: \pin_led_1_led_1__o = 1'0
  Set init value: \pin_led_2_led_2__o = 1'0
  Set init value: \pin_led_3_led_3__o = 1'0
  Set init value: \pin_led_4_led_4__o = 1'0
  Set init value: \pin_led_5_led_5__o = 1'0
  Set init value: \pin_led_6_led_6__o = 1'0
  Set init value: \pin_led_7_led_7__o = 1'0
Found init rule in `\top.$group_17'.
  Set init value: \ui__reset = 1'0
Found init rule in `\top.$group_16'.
  Set init value: \reset = 1'0
Found init rule in `\top.$group_15'.
  Set init value: \ui__trigger = 1'0
Found init rule in `\top.$group_14'.
  Set init value: \trigger = 1'0
Found init rule in `\top.$group_13'.
  Set init value: \tb_ui__reset = 1'0
Found init rule in `\top.$group_12'.
  Set init value: \ui__done = 1'0
Found init rule in `\top.$group_11'.
  Set init value: \tb_ui__trigger = 1'0
Found init rule in `\top.$group_10'.
  Set init value: \pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o = 1'0
Found init rule in `\top.$group_9'.
  Set init value: \pin_esp32_spi_0__en_esp32_spi_0__en__o = 1'0
Found init rule in `\top.$group_8'.
  Set init value: \pin_uart_0__tx_uart_0__tx__o = 1'0
Found init rule in `\top.$group_7'.
  Set init value: \pin_esp32_spi_0__tx_esp32_spi_0__tx__o = 1'0
Found init rule in `\top.$group_6'.
  Set init value: \i_button_ffsync_i_unsync_buttons__right = 1'0
Found init rule in `\top.$group_5'.
  Set init value: \i_button_ffsync_i_unsync_buttons__left = 1'0
Found init rule in `\top.$group_4'.
  Set init value: \i_button_ffsync_i_unsync_buttons__down = 1'0
Found init rule in `\top.$group_3'.
  Set init value: \i_button_ffsync_i_unsync_buttons__up = 1'0
Found init rule in `\top.$group_2'.
  Set init value: \i_button_ffsync_i_unsync_buttons__fireB = 1'0
Found init rule in `\top.$group_1'.
  Set init value: \i_button_ffsync_i_unsync_buttons__fireA = 1'0
Found init rule in `\top.$group_0'.
  Set init value: \i_button_ffsync_i_unsync_buttons__pwr = 1'0
Found init rule in `\tb.$group_11'.
  Set init value: \sync_1e6_clk = 1'0
Found init rule in `\tb.$group_10'.
  Set init value: \sync_1e6_rst = 1'0
Found init rule in `\tb.$group_9'.
  Set init value: \clk_counter = 4'0000
Found init rule in `\tb.$group_7'.
  Set init value: \rst = 1'0
Found init rule in `\tb.$group_6'.
  Set init value: \leds = 8'00000000
Found init rule in `\tb.$group_5'.
  Set init value: \debug__count = 0
Found init rule in `\tb.$group_4'.
  Set init value: \ui__done$2 = 1'0
Found init rule in `\tb.$group_3'.
  Set init value: \dut_ui__trigger = 1'0
Found init rule in `\tb.$group_2'.
  Set init value: \ui__reset$3 = 1'0
Found init rule in `\tb.$group_1'.
  Set init value: \ui__done = 1'0
Found init rule in `\tb.$group_0'.
  Set init value: \ui__trigger$1 = 1'0
Found init rule in `\dut.$group_5'.
  Set init value: \debug__count$3 = 0
Found init rule in `\dut.$group_4'.
  Set init value: \ui__done$2 = 1'0
Found init rule in `\dut.$group_3'.
  Set init value: \delayer_start = 1'0
Found init rule in `\dut.$group_2'.
  Set init value: \debug__count = 0
Found init rule in `\dut.$group_1'.
  Set init value: \ui__done = 1'0
Found init rule in `\dut.$group_0'.
  Set init value: \ui__trigger$1 = 1'0
Found init rule in `\delayer.$group_2'.
  Set init value: \fsm_state = 2'01
Found init rule in `\delayer.$group_1'.
  Set init value: \counter_out = 0
Found init rule in `\i_button_ffsync.$group_1'.
  Set init value: \stage1 = 7'0000000
Found init rule in `\i_button_ffsync.$group_0'.
  Set init value: \stage0 = 7'0000000

2.4.5. Executing PROC_ARST pass (detect async resets in processes).

2.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$223'.
Creating decoders for process `\TRELLIS_FF.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$219'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
Creating decoders for process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$178'.
     1/3: $1$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$177_EN[3:0]$184
     2/3: $1$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$177_DATA[3:0]$183
     3/3: $1$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$177_ADDR[3:0]$182
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$120'.
     1/3: $1$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$118_EN[3:0]$126
     2/3: $1$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$118_DATA[3:0]$125
     3/3: $1$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$118_ADDR[3:0]$124
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$119'.
Creating decoders for process `\top.$group_27'.
Creating decoders for process `\top.$group_26'.
Creating decoders for process `\top.$group_18'.
     1/8: \pin_led_7_led_7__o$next
     2/8: \pin_led_6_led_6__o$next
     3/8: \pin_led_5_led_5__o$next
     4/8: \pin_led_4_led_4__o$next
     5/8: \pin_led_3_led_3__o$next
     6/8: \pin_led_2_led_2__o$next
     7/8: \pin_led_1_led_1__o$next
     8/8: \pin_led_0_led_0__o$next
Creating decoders for process `\top.$group_17'.
     1/1: \ui__reset$next
Creating decoders for process `\top.$group_16'.
     1/1: \reset$next
Creating decoders for process `\top.$group_15'.
     1/1: \ui__trigger$next
Creating decoders for process `\top.$group_14'.
     1/1: \trigger$next
Creating decoders for process `\top.$group_13'.
     1/1: \tb_ui__reset$next
Creating decoders for process `\top.$group_12'.
     1/1: \ui__done$next
Creating decoders for process `\top.$group_11'.
     1/1: \tb_ui__trigger$next
Creating decoders for process `\top.$group_10'.
     1/1: \pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o$next
Creating decoders for process `\top.$group_9'.
     1/1: \pin_esp32_spi_0__en_esp32_spi_0__en__o$next
Creating decoders for process `\top.$group_8'.
     1/1: \pin_uart_0__tx_uart_0__tx__o$next
Creating decoders for process `\top.$group_7'.
     1/1: \pin_esp32_spi_0__tx_esp32_spi_0__tx__o$next
Creating decoders for process `\top.$group_6'.
     1/1: \i_button_ffsync_i_unsync_buttons__right$next
Creating decoders for process `\top.$group_5'.
     1/1: \i_button_ffsync_i_unsync_buttons__left$next
Creating decoders for process `\top.$group_4'.
     1/1: \i_button_ffsync_i_unsync_buttons__down$next
Creating decoders for process `\top.$group_3'.
     1/1: \i_button_ffsync_i_unsync_buttons__up$next
Creating decoders for process `\top.$group_2'.
     1/1: \i_button_ffsync_i_unsync_buttons__fireB$next
Creating decoders for process `\top.$group_1'.
     1/1: \i_button_ffsync_i_unsync_buttons__fireA$next
Creating decoders for process `\top.$group_0'.
     1/1: \i_button_ffsync_i_unsync_buttons__pwr$next
Creating decoders for process `\pin_button_pwr_0.$group_0'.
Creating decoders for process `\pin_esp32_spi_0__gpio5_cs.$group_0'.
Creating decoders for process `\tb.$group_11'.
     1/1: \sync_1e6_clk$next
Creating decoders for process `\tb.$group_10'.
     1/1: \sync_1e6_rst$next
Creating decoders for process `\tb.$group_9'.
     1/1: \clk_counter$next
Creating decoders for process `\tb.$group_8'.
Creating decoders for process `\tb.$group_7'.
     1/1: \rst$next
Creating decoders for process `\tb.$group_6'.
Creating decoders for process `\tb.$group_5'.
     1/1: \debug__count$next
Creating decoders for process `\tb.$group_4'.
     1/1: \ui__done$2$next
Creating decoders for process `\tb.$group_3'.
     1/1: \dut_ui__trigger$next
Creating decoders for process `\tb.$group_2'.
     1/1: \ui__reset$3$next
Creating decoders for process `\tb.$group_1'.
     1/1: \ui__done$next
Creating decoders for process `\tb.$group_0'.
     1/1: \ui__trigger$1$next
Creating decoders for process `\dut.$group_5'.
     1/1: \debug__count$3$next
Creating decoders for process `\dut.$group_4'.
     1/1: \ui__done$2$next
Creating decoders for process `\dut.$group_3'.
     1/1: \delayer_start$next
Creating decoders for process `\dut.$group_2'.
     1/1: \debug__count$next
Creating decoders for process `\dut.$group_1'.
     1/1: \ui__done$next
Creating decoders for process `\dut.$group_0'.
     1/1: \ui__trigger$1$next
Creating decoders for process `\delayer.$group_2'.
     1/1: \fsm_state$next
Creating decoders for process `\delayer.$group_1'.
     1/1: \counter_out$next
Creating decoders for process `\delayer.$group_0'.
Creating decoders for process `\i_button_ffsync.$group_2'.
Creating decoders for process `\i_button_ffsync.$group_1'.
Creating decoders for process `\i_button_ffsync.$group_0'.

2.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

2.4.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$219'.
  created $dff cell `$procdff$370' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$162_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$163_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$164_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$165_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$166_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$167_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$168_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$169_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$170_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$171_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$172_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$173_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$174_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$175_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$176_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$177_ADDR' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$178'.
  created $dff cell `$procdff$371' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$177_DATA' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$178'.
  created $dff cell `$procdff$372' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$177_EN' using process `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$178'.
  created $dff cell `$procdff$373' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$102_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$103_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$104_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$105_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$106_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$107_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$108_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$109_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$110_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$111_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$112_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$113_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$114_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$115_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$116_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$117_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$118_ADDR' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$120'.
  created $dff cell `$procdff$374' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$118_DATA' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$120'.
  created $dff cell `$procdff$375' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$118_EN' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$120'.
  created $dff cell `$procdff$376' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$119'.
  created direct connection (no actual register cell created).
Creating register for signal `\top.$sample$s$reset$sync_1e6$1' using process `\top.$group_27'.
  created $dff cell `$procdff$377' with positive edge clock.
Creating register for signal `\top.$sample$s$trigger$sync_1e6$1' using process `\top.$group_26'.
  created $dff cell `$procdff$378' with positive edge clock.
Creating register for signal `\top.\pin_led_0_led_0__o' using process `\top.$group_18'.
  created $dff cell `$procdff$379' with positive edge clock.
Creating register for signal `\top.\pin_led_1_led_1__o' using process `\top.$group_18'.
  created $dff cell `$procdff$380' with positive edge clock.
Creating register for signal `\top.\pin_led_2_led_2__o' using process `\top.$group_18'.
  created $dff cell `$procdff$381' with positive edge clock.
Creating register for signal `\top.\pin_led_3_led_3__o' using process `\top.$group_18'.
  created $dff cell `$procdff$382' with positive edge clock.
Creating register for signal `\top.\pin_led_4_led_4__o' using process `\top.$group_18'.
  created $dff cell `$procdff$383' with positive edge clock.
Creating register for signal `\top.\pin_led_5_led_5__o' using process `\top.$group_18'.
  created $dff cell `$procdff$384' with positive edge clock.
Creating register for signal `\top.\pin_led_6_led_6__o' using process `\top.$group_18'.
  created $dff cell `$procdff$385' with positive edge clock.
Creating register for signal `\top.\pin_led_7_led_7__o' using process `\top.$group_18'.
  created $dff cell `$procdff$386' with positive edge clock.
Creating register for signal `\top.\ui__reset' using process `\top.$group_17'.
  created $dff cell `$procdff$387' with positive edge clock.
Creating register for signal `\top.\reset' using process `\top.$group_16'.
  created $dff cell `$procdff$388' with positive edge clock.
Creating register for signal `\top.\ui__trigger' using process `\top.$group_15'.
  created $dff cell `$procdff$389' with positive edge clock.
Creating register for signal `\top.\trigger' using process `\top.$group_14'.
  created $dff cell `$procdff$390' with positive edge clock.
Creating register for signal `\top.\tb_ui__reset' using process `\top.$group_13'.
  created $dff cell `$procdff$391' with positive edge clock.
Creating register for signal `\top.\ui__done' using process `\top.$group_12'.
  created $dff cell `$procdff$392' with positive edge clock.
Creating register for signal `\top.\tb_ui__trigger' using process `\top.$group_11'.
  created $dff cell `$procdff$393' with positive edge clock.
Creating register for signal `\top.\pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o' using process `\top.$group_10'.
  created $dff cell `$procdff$394' with positive edge clock.
Creating register for signal `\top.\pin_esp32_spi_0__en_esp32_spi_0__en__o' using process `\top.$group_9'.
  created $dff cell `$procdff$395' with positive edge clock.
Creating register for signal `\top.\pin_uart_0__tx_uart_0__tx__o' using process `\top.$group_8'.
  created $dff cell `$procdff$396' with positive edge clock.
Creating register for signal `\top.\pin_esp32_spi_0__tx_esp32_spi_0__tx__o' using process `\top.$group_7'.
  created $dff cell `$procdff$397' with positive edge clock.
Creating register for signal `\top.\i_button_ffsync_i_unsync_buttons__right' using process `\top.$group_6'.
  created $dff cell `$procdff$398' with positive edge clock.
Creating register for signal `\top.\i_button_ffsync_i_unsync_buttons__left' using process `\top.$group_5'.
  created $dff cell `$procdff$399' with positive edge clock.
Creating register for signal `\top.\i_button_ffsync_i_unsync_buttons__down' using process `\top.$group_4'.
  created $dff cell `$procdff$400' with positive edge clock.
Creating register for signal `\top.\i_button_ffsync_i_unsync_buttons__up' using process `\top.$group_3'.
  created $dff cell `$procdff$401' with positive edge clock.
Creating register for signal `\top.\i_button_ffsync_i_unsync_buttons__fireB' using process `\top.$group_2'.
  created $dff cell `$procdff$402' with positive edge clock.
Creating register for signal `\top.\i_button_ffsync_i_unsync_buttons__fireA' using process `\top.$group_1'.
  created $dff cell `$procdff$403' with positive edge clock.
Creating register for signal `\top.\i_button_ffsync_i_unsync_buttons__pwr' using process `\top.$group_0'.
  created $dff cell `$procdff$404' with positive edge clock.
Creating register for signal `\tb.\sync_1e6_clk' using process `\tb.$group_11'.
  created $dff cell `$procdff$405' with positive edge clock.
Creating register for signal `\tb.\sync_1e6_rst' using process `\tb.$group_10'.
  created $dff cell `$procdff$406' with positive edge clock.
Creating register for signal `\tb.\clk_counter' using process `\tb.$group_9'.
  created $dff cell `$procdff$407' with positive edge clock.
Creating register for signal `\tb.\rst' using process `\tb.$group_7'.
  created $dff cell `$procdff$408' with positive edge clock.
Creating register for signal `\tb.\leds' using process `\tb.$group_6'.
  created $dff cell `$procdff$409' with positive edge clock.
Creating register for signal `\tb.\debug__count' using process `\tb.$group_5'.
  created $dff cell `$procdff$410' with positive edge clock.
Creating register for signal `\tb.\ui__done$2' using process `\tb.$group_4'.
  created $dff cell `$procdff$411' with positive edge clock.
Creating register for signal `\tb.\dut_ui__trigger' using process `\tb.$group_3'.
  created $dff cell `$procdff$412' with positive edge clock.
Creating register for signal `\tb.\ui__reset$3' using process `\tb.$group_2'.
  created $dff cell `$procdff$413' with positive edge clock.
Creating register for signal `\tb.\ui__done' using process `\tb.$group_1'.
  created $dff cell `$procdff$414' with positive edge clock.
Creating register for signal `\tb.\ui__trigger$1' using process `\tb.$group_0'.
  created $dff cell `$procdff$415' with positive edge clock.
Creating register for signal `\dut.\debug__count$3' using process `\dut.$group_5'.
  created $dff cell `$procdff$416' with positive edge clock.
Creating register for signal `\dut.\ui__done$2' using process `\dut.$group_4'.
  created $dff cell `$procdff$417' with positive edge clock.
Creating register for signal `\dut.\delayer_start' using process `\dut.$group_3'.
  created $dff cell `$procdff$418' with positive edge clock.
Creating register for signal `\dut.\debug__count' using process `\dut.$group_2'.
  created $dff cell `$procdff$419' with positive edge clock.
Creating register for signal `\dut.\ui__done' using process `\dut.$group_1'.
  created $dff cell `$procdff$420' with positive edge clock.
Creating register for signal `\dut.\ui__trigger$1' using process `\dut.$group_0'.
  created $dff cell `$procdff$421' with positive edge clock.
Creating register for signal `\delayer.\fsm_state' using process `\delayer.$group_2'.
  created $dff cell `$procdff$422' with positive edge clock.
Creating register for signal `\delayer.\counter_out' using process `\delayer.$group_1'.
  created $dff cell `$procdff$423' with positive edge clock.
Creating register for signal `\i_button_ffsync.\stage1' using process `\i_button_ffsync.$group_1'.
  created $dff cell `$procdff$424' with positive edge clock.
Creating register for signal `\i_button_ffsync.\stage0' using process `\i_button_ffsync.$group_0'.
  created $dff cell `$procdff$425' with positive edge clock.

2.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$223'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$219'.
Removing empty process `TRELLIS_FF.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$219'.
Removing empty process `DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$201'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$178'.
Removing empty process `TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$144'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$120'.
Removing empty process `TRELLIS_DPR16X4.$proc$/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$119'.
Removing empty process `top.$group_27'.
Removing empty process `top.$group_26'.
Found and cleaned up 1 empty switch in `\top.$group_18'.
Removing empty process `top.$group_18'.
Found and cleaned up 1 empty switch in `\top.$group_17'.
Removing empty process `top.$group_17'.
Found and cleaned up 1 empty switch in `\top.$group_16'.
Removing empty process `top.$group_16'.
Found and cleaned up 1 empty switch in `\top.$group_15'.
Removing empty process `top.$group_15'.
Found and cleaned up 1 empty switch in `\top.$group_14'.
Removing empty process `top.$group_14'.
Found and cleaned up 1 empty switch in `\top.$group_13'.
Removing empty process `top.$group_13'.
Found and cleaned up 1 empty switch in `\top.$group_12'.
Removing empty process `top.$group_12'.
Found and cleaned up 1 empty switch in `\top.$group_11'.
Removing empty process `top.$group_11'.
Found and cleaned up 2 empty switches in `\top.$group_10'.
Removing empty process `top.$group_10'.
Found and cleaned up 2 empty switches in `\top.$group_9'.
Removing empty process `top.$group_9'.
Found and cleaned up 1 empty switch in `\top.$group_8'.
Removing empty process `top.$group_8'.
Found and cleaned up 1 empty switch in `\top.$group_7'.
Removing empty process `top.$group_7'.
Found and cleaned up 1 empty switch in `\top.$group_6'.
Removing empty process `top.$group_6'.
Found and cleaned up 1 empty switch in `\top.$group_5'.
Removing empty process `top.$group_5'.
Found and cleaned up 1 empty switch in `\top.$group_4'.
Removing empty process `top.$group_4'.
Found and cleaned up 1 empty switch in `\top.$group_3'.
Removing empty process `top.$group_3'.
Found and cleaned up 1 empty switch in `\top.$group_2'.
Removing empty process `top.$group_2'.
Found and cleaned up 1 empty switch in `\top.$group_1'.
Removing empty process `top.$group_1'.
Found and cleaned up 1 empty switch in `\top.$group_0'.
Removing empty process `top.$group_0'.
Removing empty process `pin_button_pwr_0.$group_0'.
Removing empty process `pin_esp32_spi_0__gpio5_cs.$group_0'.
Found and cleaned up 1 empty switch in `\tb.$group_11'.
Removing empty process `tb.$group_11'.
Found and cleaned up 1 empty switch in `\tb.$group_10'.
Removing empty process `tb.$group_10'.
Found and cleaned up 1 empty switch in `\tb.$group_9'.
Removing empty process `tb.$group_9'.
Removing empty process `tb.$group_8'.
Found and cleaned up 1 empty switch in `\tb.$group_7'.
Removing empty process `tb.$group_7'.
Removing empty process `tb.$group_6'.
Found and cleaned up 1 empty switch in `\tb.$group_5'.
Removing empty process `tb.$group_5'.
Found and cleaned up 1 empty switch in `\tb.$group_4'.
Removing empty process `tb.$group_4'.
Found and cleaned up 1 empty switch in `\tb.$group_3'.
Removing empty process `tb.$group_3'.
Found and cleaned up 1 empty switch in `\tb.$group_2'.
Removing empty process `tb.$group_2'.
Found and cleaned up 1 empty switch in `\tb.$group_1'.
Removing empty process `tb.$group_1'.
Found and cleaned up 1 empty switch in `\tb.$group_0'.
Removing empty process `tb.$group_0'.
Found and cleaned up 1 empty switch in `\dut.$group_5'.
Removing empty process `dut.$group_5'.
Found and cleaned up 1 empty switch in `\dut.$group_4'.
Removing empty process `dut.$group_4'.
Found and cleaned up 1 empty switch in `\dut.$group_3'.
Removing empty process `dut.$group_3'.
Found and cleaned up 1 empty switch in `\dut.$group_2'.
Removing empty process `dut.$group_2'.
Found and cleaned up 1 empty switch in `\dut.$group_1'.
Removing empty process `dut.$group_1'.
Found and cleaned up 1 empty switch in `\dut.$group_0'.
Removing empty process `dut.$group_0'.
Found and cleaned up 5 empty switches in `\delayer.$group_2'.
Removing empty process `delayer.$group_2'.
Found and cleaned up 4 empty switches in `\delayer.$group_1'.
Removing empty process `delayer.$group_1'.
Removing empty process `delayer.$group_0'.
Removing empty process `i_button_ffsync.$group_2'.
Removing empty process `i_button_ffsync.$group_1'.
Removing empty process `i_button_ffsync.$group_0'.
Cleaned up 50 empty switches.

2.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~20 debug messages>
Optimizing module pin_clk25_0.
Optimizing module pin_button_right_0.
Optimizing module pin_button_left_0.
Optimizing module pin_button_down_0.
Optimizing module pin_button_up_0.
Optimizing module pin_button_fire_1.
Optimizing module pin_button_fire_0.
Optimizing module pin_button_pwr_0.
Optimizing module pin_uart_0__dtr.
Optimizing module pin_uart_0__rts.
Optimizing module pin_uart_0__tx.
Optimizing module pin_uart_0__rx.
Optimizing module pin_esp32_spi_0__gpio16_sclk.
Optimizing module pin_esp32_spi_0__gpio12_cipo.
Optimizing module pin_esp32_spi_0__gpio5_cs.
Optimizing module pin_esp32_spi_0__gpio4_copi.
Optimizing module pin_esp32_spi_0__gpio0.
<suppressed ~1 debug messages>
Optimizing module pin_esp32_spi_0__rx.
Optimizing module pin_esp32_spi_0__tx.
Optimizing module pin_esp32_spi_0__en.
Optimizing module pin_led_7.
Optimizing module pin_led_6.
Optimizing module pin_led_5.
Optimizing module pin_led_4.
Optimizing module pin_led_3.
Optimizing module pin_led_2.
Optimizing module pin_led_1.
Optimizing module pin_led_0.
Optimizing module tb.
<suppressed ~1 debug messages>
Optimizing module dut.
Optimizing module delayer.
<suppressed ~8 debug messages>
Optimizing module i_button_ffsync.

2.5. Executing FLATTEN pass (flatten design).
Deleting now unused module pin_clk25_0.
Deleting now unused module pin_button_right_0.
Deleting now unused module pin_button_left_0.
Deleting now unused module pin_button_down_0.
Deleting now unused module pin_button_up_0.
Deleting now unused module pin_button_fire_1.
Deleting now unused module pin_button_fire_0.
Deleting now unused module pin_button_pwr_0.
Deleting now unused module pin_uart_0__dtr.
Deleting now unused module pin_uart_0__rts.
Deleting now unused module pin_uart_0__tx.
Deleting now unused module pin_uart_0__rx.
Deleting now unused module pin_esp32_spi_0__gpio16_sclk.
Deleting now unused module pin_esp32_spi_0__gpio12_cipo.
Deleting now unused module pin_esp32_spi_0__gpio5_cs.
Deleting now unused module pin_esp32_spi_0__gpio4_copi.
Deleting now unused module pin_esp32_spi_0__gpio0.
Deleting now unused module pin_esp32_spi_0__rx.
Deleting now unused module pin_esp32_spi_0__tx.
Deleting now unused module pin_esp32_spi_0__en.
Deleting now unused module pin_led_7.
Deleting now unused module pin_led_6.
Deleting now unused module pin_led_5.
Deleting now unused module pin_led_4.
Deleting now unused module pin_led_3.
Deleting now unused module pin_led_2.
Deleting now unused module pin_led_1.
Deleting now unused module pin_led_0.
Deleting now unused module tb.
Deleting now unused module dut.
Deleting now unused module delayer.
Deleting now unused module i_button_ffsync.
<suppressed ~32 debug messages>

2.6. Executing TRIBUF pass.

2.7. Executing DEMINOUT pass (demote inout ports to input or output).

2.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 16 unused cells and 145 unused wires.
<suppressed ~33 debug messages>

2.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~54 debug messages>
Removed a total of 18 cells.

2.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

2.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\tb.\dut.\delayer.$procmux$362: { $flatten\tb.\dut.\delayer.$procmux$357_CMP $flatten\tb.\dut.\delayer.$procmux$354_CMP }
  Optimizing cells in module \top.
Performed a total of 1 changes.

2.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.11.6. Executing OPT_DFF pass (perform DFF optimizations).

2.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 20 unused wires.
<suppressed ~3 debug messages>

2.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.9. Rerunning OPT passes. (Maybe there is more to do..)

2.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

2.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.11.13. Executing OPT_DFF pass (perform DFF optimizations).

2.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.16. Finished OPT passes. (There is nothing left to do.)

2.12. Executing FSM pass (extract and optimize FSM).

2.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.tb.dut.delayer.fsm_state as FSM state register:
    Register has an initialization value.

2.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$404 ($dff) from module top (D = \pin_button_pwr_0_button_pwr_0__i, Q = \i_button_ffsync_i_unsync_buttons__pwr, rval = 1'0).
Adding SRST signal on $procdff$403 ($dff) from module top (D = \pin_button_fire_0.button_fire_0__i, Q = \i_button_ffsync_i_unsync_buttons__fireA, rval = 1'0).
Adding SRST signal on $procdff$402 ($dff) from module top (D = \pin_button_fire_1.button_fire_1__i, Q = \i_button_ffsync_i_unsync_buttons__fireB, rval = 1'0).
Adding SRST signal on $procdff$401 ($dff) from module top (D = \pin_button_up_0.button_up_0__i, Q = \i_button_ffsync_i_unsync_buttons__up, rval = 1'0).
Adding SRST signal on $procdff$400 ($dff) from module top (D = \pin_button_down_0.button_down_0__i, Q = \i_button_ffsync_i_unsync_buttons__down, rval = 1'0).
Adding SRST signal on $procdff$399 ($dff) from module top (D = \pin_button_left_0.button_left_0__i, Q = \i_button_ffsync_i_unsync_buttons__left, rval = 1'0).
Adding SRST signal on $procdff$398 ($dff) from module top (D = \pin_button_right_0.button_right_0__i, Q = \i_button_ffsync_i_unsync_buttons__right, rval = 1'0).
Adding SRST signal on $procdff$397 ($dff) from module top (D = \pin_uart_0__rx.uart_0__rx__i, Q = \pin_esp32_spi_0__tx_esp32_spi_0__tx__o, rval = 1'0).
Adding SRST signal on $procdff$396 ($dff) from module top (D = \pin_esp32_spi_0__rx.esp32_spi_0__rx__i, Q = \pin_uart_0__tx_uart_0__tx__o, rval = 1'0).
Adding SRST signal on $procdff$395 ($dff) from module top (D = $procmux$293_Y, Q = \pin_esp32_spi_0__en_esp32_spi_0__en__o, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$435 ($sdff) from module top (D = $procmux$293_Y, Q = \pin_esp32_spi_0__en_esp32_spi_0__en__o).
Adding SRST signal on $procdff$394 ($dff) from module top (D = $procmux$283_Y, Q = \pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$439 ($sdff) from module top (D = $procmux$283_Y, Q = \pin_esp32_spi_0__gpio0_esp32_spi_0__gpio0__o).
Adding SRST signal on $procdff$393 ($dff) from module top (D = \ui__trigger, Q = \tb_ui__trigger, rval = 1'0).
Adding SRST signal on $procdff$391 ($dff) from module top (D = \ui__reset, Q = \tb_ui__reset, rval = 1'0).
Adding SRST signal on $procdff$390 ($dff) from module top (D = \i_button_ffsync.stage1 [5], Q = \trigger, rval = 1'0).
Adding SRST signal on $procdff$389 ($dff) from module top (D = $67, Q = \ui__trigger, rval = 1'0).
Adding SRST signal on $procdff$388 ($dff) from module top (D = \i_button_ffsync.stage1 [6], Q = \reset, rval = 1'0).
Adding SRST signal on $procdff$387 ($dff) from module top (D = $71, Q = \ui__reset, rval = 1'0).
Adding SRST signal on $procdff$386 ($dff) from module top (D = \tb.leds [7], Q = \pin_led_7_led_7__o, rval = 1'0).
Adding SRST signal on $procdff$385 ($dff) from module top (D = \tb.leds [6], Q = \pin_led_6_led_6__o, rval = 1'0).
Adding SRST signal on $procdff$384 ($dff) from module top (D = \tb.leds [5], Q = \pin_led_5_led_5__o, rval = 1'0).
Adding SRST signal on $procdff$383 ($dff) from module top (D = \tb.leds [4], Q = \pin_led_4_led_4__o, rval = 1'0).
Adding SRST signal on $procdff$382 ($dff) from module top (D = \tb.leds [3], Q = \pin_led_3_led_3__o, rval = 1'0).
Adding SRST signal on $procdff$381 ($dff) from module top (D = \tb.leds [2], Q = \pin_led_2_led_2__o, rval = 1'0).
Adding SRST signal on $procdff$380 ($dff) from module top (D = \tb.leds [1], Q = \pin_led_1_led_1__o, rval = 1'0).
Adding SRST signal on $procdff$379 ($dff) from module top (D = \tb.leds [0], Q = \pin_led_0_led_0__o, rval = 1'0).
Adding SRST signal on $flatten\tb.\dut.\delayer.$procdff$423 ($dff) from module top (D = $flatten\tb.\dut.\delayer.$procmux$362_Y, Q = \tb.dut.delayer.counter_out, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$457 ($sdff) from module top (D = $flatten\tb.\dut.\delayer.$procmux$362_Y, Q = \tb.dut.delayer.counter_out).
Adding SRST signal on $flatten\tb.\dut.\delayer.$procdff$422 ($dff) from module top (D = $flatten\tb.\dut.\delayer.$procmux$350_Y, Q = \tb.dut.delayer.fsm_state, rval = 2'01).
Adding EN signal on $auto$ff.cc:262:slice$461 ($sdff) from module top (D = $flatten\tb.\dut.\delayer.$procmux$350_Y, Q = \tb.dut.delayer.fsm_state).
Adding SRST signal on $flatten\tb.\dut.$procdff$421 ($dff) from module top (D = \tb.dut_ui__trigger, Q = \tb.dut.ui__trigger$1, rval = 1'0).
Adding SRST signal on $flatten\tb.\dut.$procdff$419 ($dff) from module top (D = \tb.dut.debug__count$3, Q = \tb.dut.debug__count, rval = 0).
Adding SRST signal on $flatten\tb.\dut.$procdff$418 ($dff) from module top (D = \tb.dut.ui__trigger$1, Q = \tb.dut.delayer_start, rval = 1'0).
Adding SRST signal on $flatten\tb.\dut.$procdff$416 ($dff) from module top (D = \tb.dut.delayer.counter_out, Q = \tb.dut.debug__count$3, rval = 0).
Adding SRST signal on $flatten\tb.$procdff$415 ($dff) from module top (D = \tb_ui__trigger, Q = \tb.ui__trigger$1, rval = 1'0).
Adding SRST signal on $flatten\tb.$procdff$413 ($dff) from module top (D = \tb_ui__reset, Q = \tb.ui__reset$3, rval = 1'0).
Adding SRST signal on $flatten\tb.$procdff$412 ($dff) from module top (D = \tb.ui__trigger$1, Q = \tb.dut_ui__trigger, rval = 1'0).
Adding SRST signal on $flatten\tb.$procdff$410 ($dff) from module top (D = \tb.dut.debug__count, Q = \tb.debug__count, rval = 0).
Adding SRST signal on $flatten\tb.$procdff$407 ($dff) from module top (D = $flatten\tb.$5 [3:0], Q = \tb.clk_counter, rval = 4'0000).
Adding SRST signal on $flatten\tb.$procdff$406 ($dff) from module top (D = \tb.ui__reset$3, Q = \tb.sync_1e6_rst, rval = 1'0).
Adding SRST signal on $flatten\tb.$procdff$405 ($dff) from module top (D = $flatten\tb.$13, Q = \tb.sync_1e6_clk, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$483 ($sdff) from module top (D = $flatten\tb.$11, Q = \tb.sync_1e6_clk).

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 40 unused cells and 41 unused wires.
<suppressed ~80 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

2.13.13. Executing OPT_DFF pass (perform DFF optimizations).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.16. Rerunning OPT passes. (Maybe there is more to do..)

2.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

2.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.20. Executing OPT_DFF pass (perform DFF optimizations).

2.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.13.23. Finished OPT passes. (There is nothing left to do.)

2.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$468 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$466 ($ne).
Removed cell top.$procmux$277 ($mux).
Removed cell top.$procmux$287 ($mux).
Removed top 1 bits (of 2) from port B of cell top.$flatten\tb.\dut.\delayer.$procmux$357_CMP0 ($eq).
Removed cell top.$flatten\tb.\dut.\delayer.$procmux$355 ($mux).
Removed cell top.$flatten\tb.\dut.\delayer.$procmux$352 ($mux).
Removed top 1 bits (of 33) from port Y of cell top.$flatten\tb.\dut.\delayer.$12 ($sub).
Removed top 14 bits (of 32) from FF cell top.$auto$ff.cc:262:slice$478 ($sdff).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\tb.$6 ($add).
Removed top 14 bits (of 32) from FF cell top.$auto$ff.cc:262:slice$472 ($sdff).
Removed top 14 bits (of 32) from FF cell top.$auto$ff.cc:262:slice$474 ($sdff).
Removed top 1 bits (of 5) from wire top.$flatten\tb.$5.
Removed top 1 bits (of 33) from wire top.$flatten\tb.\dut.\delayer.$10.

2.15. Executing PEEPOPT pass (run peephole optimizers).

2.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

2.17. Executing SHARE pass (SAT-based resource sharing).

2.18. Executing TECHMAP pass (map to technology primitives).

2.18.1. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~36 debug messages>

2.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21. Executing TECHMAP pass (map to technology primitives).

2.21.1. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/mul2dsp.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

2.21.2. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

2.21.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

2.22. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\tb.$6 ($add).
  creating $macc model for $flatten\tb.\dut.\delayer.$12 ($sub).
  creating $alu model for $macc $flatten\tb.\dut.\delayer.$12.
  creating $alu model for $macc $flatten\tb.$6.
  creating $alu model for $flatten\tb.\dut.\delayer.$19 ($gt): new $alu
  creating $alu cell for $flatten\tb.\dut.\delayer.$19: $auto$alumacc.cc:485:replace_alu$489
  creating $alu cell for $flatten\tb.$6: $auto$alumacc.cc:485:replace_alu$494
  creating $alu cell for $flatten\tb.\dut.\delayer.$12: $auto$alumacc.cc:485:replace_alu$497
  created 3 $alu and 0 $macc cells.

2.23. Executing OPT pass (performing simple optimizations).

2.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

2.23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.23.6. Executing OPT_DFF pass (perform DFF optimizations).

2.23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.23.9. Rerunning OPT passes. (Maybe there is more to do..)

2.23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

2.23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.23.13. Executing OPT_DFF pass (perform DFF optimizations).

2.23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.23.16. Finished OPT passes. (There is nothing left to do.)

2.24. Executing MEMORY pass.

2.24.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.24.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.24.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

2.24.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

2.24.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.24.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.24.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.24.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.24.9. Executing MEMORY_COLLECT pass (generating $mem cells).

2.25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.26. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

2.27. Executing TECHMAP pass (map to technology primitives).

2.27.1. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD'.
Successfully finished Verilog frontend.

2.27.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.28. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

2.29. Executing TECHMAP pass (map to technology primitives).

2.29.1. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4'.
Successfully finished Verilog frontend.

2.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

2.30. Executing OPT pass (performing simple optimizations).

2.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~34 debug messages>

2.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.30.3. Executing OPT_DFF pass (perform DFF optimizations).

2.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.30.5. Finished fast OPT passes.

2.31. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

2.32. Executing OPT pass (performing simple optimizations).

2.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

2.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.32.6. Executing OPT_DFF pass (perform DFF optimizations).

2.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.32.9. Finished OPT passes. (There is nothing left to do.)

2.33. Executing TECHMAP pass (map to technology primitives).

2.33.1. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.33.2. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

2.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~504 debug messages>

2.34. Executing OPT pass (performing simple optimizations).

2.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~364 debug messages>

2.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~111 debug messages>
Removed a total of 37 cells.

2.34.3. Executing OPT_DFF pass (perform DFF optimizations).

2.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 111 unused cells and 284 unused wires.
<suppressed ~128 debug messages>

2.34.5. Finished fast OPT passes.

2.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.37. Executing TECHMAP pass (map to technology primitives).

2.37.1. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

2.37.2. Continuing TECHMAP pass.
Using template IB for cells of type IB.
Using template \$_SDFFE_PP0N_ for cells of type $_SDFFE_PP0N_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFF_P_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template OB for cells of type OB.
Using template BB for cells of type BB.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
No more expansions possible.
<suppressed ~209 debug messages>

2.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~42 debug messages>

2.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

2.40. Executing ECP5_GSR pass (implement FF init values).
Handling GSR in top.

2.41. Executing ATTRMVCP pass (move or copy attributes).

2.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 595 unused wires.
<suppressed ~1 debug messages>

2.43. Executing TECHMAP pass (map to technology primitives).

2.43.1. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.44. Executing ABC pass (technology mapping using ABC).

2.44.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 153 gates and 237 wires to a netlist network with 82 inputs and 49 outputs.

2.44.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + dress 
ABC: Total number of equiv classes                =      49.
ABC: Participating nodes from both networks       =     106.
ABC: Participating nodes from the first network   =      49. (  79.03 % of nodes)
ABC: Participating nodes from the second network  =      57. (  91.94 % of nodes)
ABC: Node pairs (any polarity)                    =      49. (  79.03 % of names can be moved)
ABC: Node pairs (same polarity)                   =      49. (  79.03 % of names can be moved)
ABC: Total runtime =     0.04 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.44.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       60
ABC RESULTS:        internal signals:      106
ABC RESULTS:           input signals:       82
ABC RESULTS:          output signals:       49
Removing temp directory.
Removed 0 unused cells and 144 unused wires.

2.45. Executing TECHMAP pass (map to technology primitives).

2.45.1. Executing Verilog-2005 frontend: /home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/home/ubuntu/Documents/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.45.2. Continuing TECHMAP pass.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$415b9dd3a15783ae56c103f189fd8e182f997441\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$359fe4e746656bf9c72aecaff84fc7bdea9f55a5\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$287fc40df277be5303029e92cf8599a6aab4ddf0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$9bdc414229f06e785dc8fd97a243faa9336e164a\$lut for cells of type $lut.
Using template $paramod$99e8e978b22ef71f0dc5bc15b07fc355d272684f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111000 for cells of type $lut.
No more expansions possible.
<suppressed ~365 debug messages>

2.46. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in top.
  Optimizing lut $abc$1713$auto$blifparse.cc:515:parse_blif$1717.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$1713$auto$blifparse.cc:515:parse_blif$1716.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$1713$auto$blifparse.cc:515:parse_blif$1715.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
Removed 0 unused cells and 125 unused wires.

2.47. Executing AUTONAME pass.
Renamed 993 objects in module top (20 iterations).
<suppressed ~266 debug messages>

2.48. Executing HIERARCHY pass (managing design hierarchy).

2.48.1. Analyzing design hierarchy..
Top module:  \top

2.48.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.49. Printing statistics.

=== top ===

   Number of wires:                225
   Number of wire bits:            698
   Number of public wires:         225
   Number of public wire bits:     698
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                224
     CCU2C                          32
     LUT4                           62
     PFUMX                           3
     TRELLIS_FF                    106
     TRELLIS_IO                     21

2.50. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

3. Executing JSON backend.

End of script. Logfile hash: cf33cf1389, CPU: user 1.98s system 0.20s, MEM: 286.25 MB peak
Yosys 0.13+3 (git sha1 61324cf55, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 46% 13x read_verilog (1 sec), 10% 20x opt_clean (0 sec), ...
